#!/bin/bash

SECONDS=0

# change working directory
cd /home/priyanshu/Saccharomyces_cerevisiae/

# STEP 1: Run fastqc
fastqc ~/Saccharomyces_cerevisiae/data/SRR3396389_1.fastq.gz ~/Saccharomyces_cerevisiae/data/SRR3396389_2.fastq.gz -o data/fastq_result/


# run trimmomatic to trim reads with poor quality
java -jar ~/software/Trimmomatic/dist/jar/trimmomatic-0.40-rc1.jar PE -threads 4 ~/Saccharomyces_cerevisiae/data/SRR3396389_1.fastq.gz ~/Saccharomyces_cerevisiae/data/SRR3396389_2.fastq.gz\
    #~/Saccharomyces_cerevisiae/data/Trim_results/SRR3396389_1_trimmed.fastq ~/Saccharomyces_cerevisiae/data/Trim_results/SRR3396389_1_unpaired.fastq \
    #~/Saccharomyces_cerevisiae/data/Trim_results/SRR3396389_2_trimmed.fastq ~/Saccharomyces_cerevisiae/data/Trim_results/SRR3396389_2_unpaired.fastq \
    #TRAILING:10 MINLEN:50

 fastqc ~/Saccharomyces_cerevisiae/data/Trim_results/SRR3396389_1_trimmed.fastq ~/Saccharomyces_cerevisiae/data/Trim_results/SRR3396389_2_trimmed.fastq -o data/Final/


REF_GENOME="/home/priyanshu/Saccharomyces_cerevisiae/genome/Saccharomyces_cerevisiae.R64-1-1.dna.primary_assembly.fa"
known_sites="/home/priyanshu/Saccharomyces_cerevisiae/genome/saccharomyces_cerevisiae.vcf"
READS_1="/home/priyanshu/Saccharomyces_cerevisiae/data/Trim_results/SRR3396381_1_trimmed.fastq"
READS_2="/home/priyanshu/Saccharomyces_cerevisiae/data/Trim_results/SRR3396381_2_trimmed.fastq"
results="/home/priyanshu/Saccharomyces_cerevisiae/results/SRR3396393"
data="/home/priyanshu/Saccharomyces_cerevisiae/data"
aligned_reads="/home/priyanshu/Saccharomyces_cerevisiae/aligned_reads"

bwa mem -t 4 $REF_GENOME $READS_1 $READS_2 > $results/SRR3396388.sam

# Convert SAM to BAM
samtools view -bS $results/SRR3396389.sam > $results/SRR3396388.bam

# Sort the BAM file
samtools sort $results/SRR3396393.bam -o $results/SRR3396393_sorted.bam

# Index the sorted BAM file
samtools index $results/SRR3396393_sorted.bam

# Perform flagstat analysis
samtools flagstat $results/SRR3396393_sorted.bam > $results/SRR3396393_flagstat.txt

# Calculate coverage depth
samtools depth $results/SRR3396393_sorted.bam > $results/SRR3396393_coverage.txt

# Remove duplicates using Picard Tools
java -jar /home/priyanshu/software/picard/build/libs/picard.jar MarkDuplicates \
    I=$results/SRR3396393_sorted.bam \
    O=$results/SRR3396393_no_duplicates.bam \
    METRICS_FILE=$results/duplicate_metrics.txt \
    REMOVE_DUPLICATES=true

# Index the new BAM file
samtools index $results/SRR3396393_no_duplicates.bam

# Calculate coverage using bedtools
bedtools genomecov -ibam $results/SRR3396393_no_duplicates.bam -bg > $results/SRR3396393_coverage.bed
bedtools sort -i $results/SRR3396393_coverage.bed > $results/SRR3396393_sorted_coverage.bed

# Calculate summary statistics using samtools flagstat
samtools flagstat $results/SRR3396393_no_duplicates.bam > $results/SRR3396393_flagstat.txt

# Add read group (1) and sample run, library, and name
java -jar /home/priyanshu/software/picard/build/libs/picard.jar AddOrReplaceReadGroups \
    I=$results/SRR3396393_no_duplicates.bam \
    O=$results/SRR3396393_with_RG.bam \
    RGID=1 \
    RGLB=MyLibrary \
    RGPL=Illumina \
    RGPU=Run1 \
    RGSM=Sample1

# Index the BAM file with read groups
samtools index $results/SRR3396393_with_RG.bam

